{"version":3,"sources":["components/TestChart.jsx","App.js","reportWebVitals.js","index.js"],"names":["slicedData","combinedData","slice","TestChart","ComposedChart","width","height","data","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","ReferenceLine","y","stroke","Bar","map","entry","index","Cell","fill","approvalChange","Line","type","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0gjVAMMA,EAAaC,EAAaC,MAAM,EAAE,IACnBC,E,uKAIjB,OACE,eAACC,EAAA,EAAD,CACEC,MAAO,IACPC,OAAQ,IACRC,KAAMP,EACNQ,OAAQ,CACNC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,GALzC,UAQE,cAACC,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAeC,EAAG,EAAGC,OAAO,SAC5B,cAACC,EAAA,EAAD,CAAKP,QAAQ,iBAAb,SAEFf,EAAauB,KAAI,SAACC,EAAOC,GAAR,OACf,cAACC,EAAA,EAAD,CAAkBC,KAAMH,EAAMI,gBAAkB,EAAI,UAAY,WAArDH,QAIX,cAACI,EAAA,EAAD,CAAMC,KAAK,WAAWf,QAAQ,mBAAmBM,OAAO,YACxD,cAACQ,EAAA,EAAD,CAAMC,KAAK,WAAWf,QAAQ,iBAAiBM,OAAO,qB,GA3BvBU,aCGxBC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.19fc3ab5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  ComposedChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ReferenceLine, Line\n} from 'recharts';\nimport combinedData from '/Users/grant/Desktop/Trumpproval/src/convert/transformed_data/combined.json'; \n// import combinedData from '/Users/grant/Desktop/Trumpproval/src/convert/transformed_data/sample.json';\nconst slicedData = combinedData.slice(0,20) \nexport default class TestChart extends Component {\n\n  render() {\n\n    return (\n      <ComposedChart\n        width={1000}\n        height={500}\n        data={slicedData}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <ReferenceLine y={0} stroke=\"#000\" />\n        <Bar dataKey=\"approvalChange\">\n        {\n      combinedData.map((entry, index) => (\n        <Cell key={index} fill={entry.approvalChange >= 0 ? \"#66ff00\" : \"#FF0000\"} />\n      ))\n    }\n        </Bar>\n        <Line type=\"monotone\" dataKey=\"averagedApproval\" stroke=\"#ffa500\" />\n        <Line type=\"monotone\" dataKey=\"numberOfTweets\" stroke=\"\t#FFC0CB\" />\n      </ComposedChart>\n    );\n  }\n}\n\n","import TestChart from './components/TestChart.jsx'; \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TestChart></TestChart>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}